name: Route To Production

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  terraform-prereq-dev:
    environment: Development

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Create Storage Account
      run: |
        az group create --location "uksouth" --name "rg-portal-repository-tf-dev-uksouth"
        az storage account create --name "saptlrepotfdev" --resource-group "rg-portal-repository-tf-dev-uksouth" --location "uksouth" --sku "Standard_LRS"
        az storage container create --name "terraform" --account-name "saptlrepotfdev"

  terraform-prereq-prd:
    environment: Production
    needs: ["terraform-prereq-dev"]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Create Storage Account
      run: |
        az group create --location "uksouth" --name "rg-portal-repository-tf-prd-uksouth"
        az storage account create --name "saptlrepotfprd" --resource-group "rg-portal-repository-tf-prd-uksouth" --location "uksouth" --sku "Standard_LRS"
        az storage container create --name "terraform" --account-name "saptlrepotfprd"

  terraform-plan-dev:
    runs-on: ubuntu-latest
    environment: Development
    needs: ["terraform-prereq-dev"]
    
    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v1

    - name: Terraform fmt
      run: |
        cd terraform
        terraform fmt -check
      continue-on-error: false
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config=backends/dev.backend.hcl -var-file=tfvars/dev.tfvars
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate -var-file=tfvars/dev.tfvars

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var-file=tfvars/dev.tfvars
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

  terraform-apply-dev:
    runs-on: ubuntu-latest
    environment: Development
    needs: ["terraform-plan-dev"]
    
    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config=backends/dev.backend.hcl
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var-file=tfvars/dev.tfvars
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Plan
      run: |
        cd terraform
        terraform apply -var-file=tfvars/dev.tfvars
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

