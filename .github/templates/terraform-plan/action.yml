name: "terraform-plan"

inputs:
  environment:
    description: "The environment to plan against to (dev, test, prod, etc.)"
    required: true
    default: "dev"
  terraform-folder:
    description: "The folder containing the Terraform projects"
    required: true
    default: "terraform"
  terraform-var-file:
    description: "The var-file to to be used for the Terraform plan (tfvars/dev.tfvars, tfvars/test.tfvars, tfvars/prod.tfvars, etc.)"
    required: true
    default: "tfvars/dev.tfvars"
  terraform-backend-file:
    description: "The backend-file to to be used for the Terraform plan (backends/dev.backend.hcl, backends/test.backend.hcl, backends/prod.backend.hcl, etc.)"
    required: true
    default: "backends/dev.backend.hcl"
secrets:
  AZURE_CLIENT_ID:
    required: true
  AZURE_SUBSCRIPTION_ID:
    required: true
  AZURE_TENANT_ID:
    required: true

#environment: ${{ inputs.environment }}
  
runs:
  using: "composite"
  steps:
  - name: 'Az CLI Login'
    uses: azure/login@v1
    with:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v1
    with:
      terraform_wrapper: false

  - name: Setup TFLint
    uses: terraform-linters/setup-tflint@v1
  
  - name: Terraform Init
    shell: bash
    run: |
      cd ${{ inputs.terraform-folder }}
      terraform init -backend-config=${{ inputs.terraform-backend-file }} -var-file=${{ inputs.terraform-var-file }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

  - name: Terraform Validate
    shell: bash
    run: |
      cd ${{ inputs.terraform-folder }}
      terraform validate

  - name: Init TFLint
    shell: bash
    run: |
      cd ${{ inputs.terraform-folder }}
      tflint --init

  - name: Run TFLint
    shell: bash
    run: |
      cd ${{ inputs.terraform-folder }}
      tflint -f compact

  - name: Terraform Plan
    shell: bash
    run: |
      cd ${{ inputs.terraform-folder }}
      terraform plan -var-file=${{ inputs.terraform-var-file }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true
