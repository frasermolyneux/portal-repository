// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace XtremeIdiots.Portal.Repository.DataLib;

[Index("GameType", Name = "IX_GameType")]
[Index("GameType", "LastSeen", Name = "IX_GameTypeAndLastSeen")]
[Index("PlayerId", Name = "IX_PlayerId", IsUnique = true)]
[Index("GameType", "LastSeen", Name = "IX_Players_GameType_LastSeen_Covering")]
[Index("GameType", "Username", Name = "IX_Players_GameType_Username")]
[Index("Guid", Name = "IX_Players_Guid")]
[Index("IpAddress", Name = "IX_Players_IpAddress")]
[Index("LastSeen", Name = "IX_Players_LastSeen")]
[Index("Username", Name = "IX_Players_Username")]
public partial class Player
{
    [Key]
    public Guid PlayerId { get; set; }

    public int GameType { get; set; }

    [StringLength(100)]
    public string? Username { get; set; }

    [StringLength(50)]
    public string? Guid { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime FirstSeen { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime LastSeen { get; set; }

    [StringLength(60)]
    public string? IpAddress { get; set; }

    [InverseProperty("Player")]
    public virtual ICollection<AdminAction> AdminActions { get; set; } = new List<AdminAction>();

    [InverseProperty("Player")]
    public virtual ICollection<ChatMessage> ChatMessages { get; set; } = new List<ChatMessage>();

    [InverseProperty("Player")]
    public virtual ICollection<LivePlayer> LivePlayers { get; set; } = new List<LivePlayer>();

    [InverseProperty("Player")]
    public virtual ICollection<MapVote> MapVotes { get; set; } = new List<MapVote>();

    [InverseProperty("Player")]
    public virtual ICollection<PlayerAlias> PlayerAliases { get; set; } = new List<PlayerAlias>();

    [InverseProperty("Player")]
    public virtual ICollection<PlayerIpAddress> PlayerIpAddresses { get; set; } = new List<PlayerIpAddress>();

    [InverseProperty("Player")]
    public virtual ICollection<PlayerTag> PlayerTags { get; set; } = new List<PlayerTag>();

    [InverseProperty("Player")]
    public virtual ICollection<ProtectedName> ProtectedNames { get; set; } = new List<ProtectedName>();

    [InverseProperty("Player")]
    public virtual ICollection<RecentPlayer> RecentPlayers { get; set; } = new List<RecentPlayer>();

    [InverseProperty("Player")]
    public virtual ICollection<Report> Reports { get; set; } = new List<Report>();
}